/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface IconExternal {}
  interface IonicAppflowActivator {}
  interface IonicBarChart {
    'color': string;
    'data': string;
  }
  interface IonicButton {
    'color': string;
    'disabled': boolean;
    'type': string;
  }
  interface IonicNewsletterSignup {
    'arrowMode': boolean;
    'buttonText': string;
    'darkMode': boolean;
    'homepageMode': boolean;
    'kind': string;
    'lg': boolean;
    'placeholder': string;
  }
  interface IonicQuickSignup {
    'buttonColor': string;
    'showPricingNotice': boolean;
    'transparentInput': boolean;
  }
  interface IonicSearch {
    'mobile': boolean;
  }
  interface IonicSlider {}
  interface IonicSnapBar {}
  interface IonicSubHeader {
    'darkMode': boolean;
  }
  interface IonicToggle {}
  interface IonicToggleButton {
    'deselect': () => Promise<void>;
    'select': () => Promise<void>;
    'tab': string;
    'title': string;
  }
  interface IonicToggleTab {
    'hide': () => Promise<void>;
    'show': () => Promise<void>;
    'tab': string;
  }
}

declare global {


  interface HTMLIconExternalElement extends Components.IconExternal, HTMLStencilElement {}
  var HTMLIconExternalElement: {
    prototype: HTMLIconExternalElement;
    new (): HTMLIconExternalElement;
  };

  interface HTMLIonicAppflowActivatorElement extends Components.IonicAppflowActivator, HTMLStencilElement {}
  var HTMLIonicAppflowActivatorElement: {
    prototype: HTMLIonicAppflowActivatorElement;
    new (): HTMLIonicAppflowActivatorElement;
  };

  interface HTMLIonicBarChartElement extends Components.IonicBarChart, HTMLStencilElement {}
  var HTMLIonicBarChartElement: {
    prototype: HTMLIonicBarChartElement;
    new (): HTMLIonicBarChartElement;
  };

  interface HTMLIonicButtonElement extends Components.IonicButton, HTMLStencilElement {}
  var HTMLIonicButtonElement: {
    prototype: HTMLIonicButtonElement;
    new (): HTMLIonicButtonElement;
  };

  interface HTMLIonicNewsletterSignupElement extends Components.IonicNewsletterSignup, HTMLStencilElement {}
  var HTMLIonicNewsletterSignupElement: {
    prototype: HTMLIonicNewsletterSignupElement;
    new (): HTMLIonicNewsletterSignupElement;
  };

  interface HTMLIonicQuickSignupElement extends Components.IonicQuickSignup, HTMLStencilElement {}
  var HTMLIonicQuickSignupElement: {
    prototype: HTMLIonicQuickSignupElement;
    new (): HTMLIonicQuickSignupElement;
  };

  interface HTMLIonicSearchElement extends Components.IonicSearch, HTMLStencilElement {}
  var HTMLIonicSearchElement: {
    prototype: HTMLIonicSearchElement;
    new (): HTMLIonicSearchElement;
  };

  interface HTMLIonicSliderElement extends Components.IonicSlider, HTMLStencilElement {}
  var HTMLIonicSliderElement: {
    prototype: HTMLIonicSliderElement;
    new (): HTMLIonicSliderElement;
  };

  interface HTMLIonicSnapBarElement extends Components.IonicSnapBar, HTMLStencilElement {}
  var HTMLIonicSnapBarElement: {
    prototype: HTMLIonicSnapBarElement;
    new (): HTMLIonicSnapBarElement;
  };

  interface HTMLIonicSubHeaderElement extends Components.IonicSubHeader, HTMLStencilElement {}
  var HTMLIonicSubHeaderElement: {
    prototype: HTMLIonicSubHeaderElement;
    new (): HTMLIonicSubHeaderElement;
  };

  interface HTMLIonicToggleElement extends Components.IonicToggle, HTMLStencilElement {}
  var HTMLIonicToggleElement: {
    prototype: HTMLIonicToggleElement;
    new (): HTMLIonicToggleElement;
  };

  interface HTMLIonicToggleButtonElement extends Components.IonicToggleButton, HTMLStencilElement {}
  var HTMLIonicToggleButtonElement: {
    prototype: HTMLIonicToggleButtonElement;
    new (): HTMLIonicToggleButtonElement;
  };

  interface HTMLIonicToggleTabElement extends Components.IonicToggleTab, HTMLStencilElement {}
  var HTMLIonicToggleTabElement: {
    prototype: HTMLIonicToggleTabElement;
    new (): HTMLIonicToggleTabElement;
  };
  interface HTMLElementTagNameMap {
    'icon-external': HTMLIconExternalElement;
    'ionic-appflow-activator': HTMLIonicAppflowActivatorElement;
    'ionic-bar-chart': HTMLIonicBarChartElement;
    'ionic-button': HTMLIonicButtonElement;
    'ionic-newsletter-signup': HTMLIonicNewsletterSignupElement;
    'ionic-quick-signup': HTMLIonicQuickSignupElement;
    'ionic-search': HTMLIonicSearchElement;
    'ionic-slider': HTMLIonicSliderElement;
    'ionic-snap-bar': HTMLIonicSnapBarElement;
    'ionic-sub-header': HTMLIonicSubHeaderElement;
    'ionic-toggle': HTMLIonicToggleElement;
    'ionic-toggle-button': HTMLIonicToggleButtonElement;
    'ionic-toggle-tab': HTMLIonicToggleTabElement;
  }
}

declare namespace LocalJSX {
  interface IconExternal extends JSXBase.HTMLAttributes<HTMLIconExternalElement> {}
  interface IonicAppflowActivator extends JSXBase.HTMLAttributes<HTMLIonicAppflowActivatorElement> {}
  interface IonicBarChart extends JSXBase.HTMLAttributes<HTMLIonicBarChartElement> {
    'color'?: string;
    'data'?: string;
  }
  interface IonicButton extends JSXBase.HTMLAttributes<HTMLIonicButtonElement> {
    'color'?: string;
    'disabled'?: boolean;
    'type'?: string;
  }
  interface IonicNewsletterSignup extends JSXBase.HTMLAttributes<HTMLIonicNewsletterSignupElement> {
    'arrowMode'?: boolean;
    'buttonText'?: string;
    'darkMode'?: boolean;
    'homepageMode'?: boolean;
    'kind'?: string;
    'lg'?: boolean;
    'placeholder'?: string;
  }
  interface IonicQuickSignup extends JSXBase.HTMLAttributes<HTMLIonicQuickSignupElement> {
    'buttonColor'?: string;
    'showPricingNotice'?: boolean;
    'transparentInput'?: boolean;
  }
  interface IonicSearch extends JSXBase.HTMLAttributes<HTMLIonicSearchElement> {
    'mobile'?: boolean;
  }
  interface IonicSlider extends JSXBase.HTMLAttributes<HTMLIonicSliderElement> {}
  interface IonicSnapBar extends JSXBase.HTMLAttributes<HTMLIonicSnapBarElement> {}
  interface IonicSubHeader extends JSXBase.HTMLAttributes<HTMLIonicSubHeaderElement> {
    'darkMode'?: boolean;
  }
  interface IonicToggle extends JSXBase.HTMLAttributes<HTMLIonicToggleElement> {}
  interface IonicToggleButton extends JSXBase.HTMLAttributes<HTMLIonicToggleButtonElement> {
    'onToggleSelected'?: (event: CustomEvent<any>) => void;
    'tab'?: string;
    'title'?: string;
  }
  interface IonicToggleTab extends JSXBase.HTMLAttributes<HTMLIonicToggleTabElement> {
    'tab'?: string;
  }

  interface IntrinsicElements {
    'icon-external': IconExternal;
    'ionic-appflow-activator': IonicAppflowActivator;
    'ionic-bar-chart': IonicBarChart;
    'ionic-button': IonicButton;
    'ionic-newsletter-signup': IonicNewsletterSignup;
    'ionic-quick-signup': IonicQuickSignup;
    'ionic-search': IonicSearch;
    'ionic-slider': IonicSlider;
    'ionic-snap-bar': IonicSnapBar;
    'ionic-sub-header': IonicSubHeader;
    'ionic-toggle': IonicToggle;
    'ionic-toggle-button': IonicToggleButton;
    'ionic-toggle-tab': IonicToggleTab;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


